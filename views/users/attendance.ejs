<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>ERP Portal - Attendance</title>
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet" />
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap"
    rel="stylesheet" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
  <link href="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.3/main.min.css" rel="stylesheet" />
  <style>
    :root {
      --primary-blue: #3b82f6;
      --primary-purple: #6d28d9;
      --primary-teal: #2dd4bf;
      --primary-pink: #ec4899;
      --primary-indigo: #4f46e5;
      --accent-orange: #f97316;
      --bg-light: #f8fafc;
      --card-bg: #ffffff;
      --text-dark: #111827;
      --text-muted: #6b7280;
      --shadow: 0 4px 20px rgba(0, 0, 0, 0.05);
      --border: #e5e7eb;
    }

    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: "Poppins", sans-serif;
      background: var(--bg-light);
      min-height: 100vh;
      color: var(--text-dark);
    }

    .icon-bubble {
      width: 48px;
      height: 48px;
      border-radius: 50%;
      background: linear-gradient(135deg, var(--primary-blue), var(--primary-teal));
      display: flex;
      align-items: center;
      justify-content: center;
      color: var(--card-bg);
      font-size: 1.25rem;
      box-shadow: var(--shadow);
    }

    .sidebar {
      position: fixed;
      top: 0;
      left: 0;
      width: 240px;
      height: 100%;
      background: var(--card-bg);
      border-right: 1px solid var(--border);
      padding: 1.5rem 1rem;
      z-index: 1000;
      transition: transform 0.3s ease;
    }

    .sidebar.hidden {
      transform: translateX(-100%);
    }

    .sidebar-toggle {
      position: fixed;
      top: 1rem;
      left: 1rem;
      z-index: 1001;
      background: var(--primary-blue);
      color: var(--card-bg);
      padding: 0.75rem;
      border-radius: 50%;
      cursor: pointer;
      display: none;
      box-shadow: var(--shadow);
    }

    .sidebar-close {
      display: none;
      background: var(--primary-blue);
      color: var(--card-bg);
      padding: 0.5rem;
      border-radius: 50%;
      cursor: pointer;
      margin-bottom: 1rem;
    }

    @media (max-width: 768px) {
      .sidebar {
        width: 200px;
        padding: 1rem 0.75rem;
      }

      .sidebar.active {
        transform: translateX(0);
      }

      .sidebar-toggle,
      .sidebar-close {
        display: block;
      }

      .icon-bubble {
        width: 40px;
        height: 40px;
        font-size: 1rem;
      }
    }

    @media (max-width: 480px) {
      .sidebar {
        width: 180px;
      }
    }

    .sidebar-nav a {
      display: flex;
      align-items: center;
      padding: 0.75rem 1rem;
      color: var(--text-dark);
      text-decoration: none;
      border-radius: 8px;
      margin-bottom: 0.5rem;
      transition: all 0.3s ease;
      font-size: 0.95rem;
    }

    .sidebar-nav a:hover,
    .sidebar-nav a.active {
      background: var(--bg-light);
      transform: translateX(4px);
    }

    .sidebar-nav a i {
      margin-right: 0.75rem;
      color: var(--primary-blue);
    }

    .morphing-container {
      margin-left: 260px;
      margin-top: 2.5rem;
      padding: 1.5rem;
      max-width: 1280px;
      margin-left: auto;
      margin-right: auto;
      transition: margin-left 0.3s ease;
    }

    @media (max-width: 768px) {
      .morphing-container {
        margin-left: 0;
        margin-top: 4rem;
        padding: 1rem;
      }
    }

    .organic-header,
    .attendance-section {
      margin-bottom: 1.5rem;
    }

    .blob-card {
      background: var(--card-bg);
      border-radius: 12px;
      box-shadow: var(--shadow);
      transition: all 0.3s ease;
      border: 1px solid var(--border);
    }

    .blob-card:hover {
      transform: translateY(-4px);
      background: linear-gradient(135deg, rgba(59, 130, 246, 0.05), rgba(45, 212, 191, 0.05));
      box-shadow: 0 8px 24px rgba(0, 0, 0, 0.1);
    }

    .attendance-blob {
      padding: 1.5rem;
    }

    @media (max-width: 768px) {
      .attendance-blob {
        padding: 1rem;
      }
    }

    .text-flow {
      color: var(--text-dark);
    }

    .fade-in-flow {
      animation: fadeInFlow 0.8s ease-out forwards;
      opacity: 0;
    }

    .slide-in-left {
      animation: slideInLeft 0.8s ease-out forwards;
      opacity: 0;
      transform: translateX(-30px);
    }

    @keyframes fadeInFlow {
      to {
        opacity: 1;
      }
    }

    @keyframes slideInLeft {
      to {
        opacity: 1;
        transform: translateX(0);
      }
    }

    .table-container {
      overflow-x: auto;
      border-radius: 10px;
      background: var(--card-bg);
      border: 1px solid var(--border);
    }

    table {
      width: 100%;
      border-collapse: collapse;
    }

    thead {
      position: sticky;
      top: 0;
      background: var(--bg-light);
      z-index: 1;
    }

    th,
    td {
      padding: 0.75rem 1rem;
      text-align: left;
      border-bottom: 1px solid var(--border);
      color: var(--text-dark);
      font-size: 0.9rem;
    }

    th {
      font-weight: 600;
    }

    tr:nth-child(even) {
      background: #f9fafb;
    }

    tr:hover {
      background: linear-gradient(135deg, rgba(59, 130, 246, 0.05), rgba(45, 212, 191, 0.05));
    }

    .subject-card {
      display: none;
      background: var(--card-bg);
      border: 1px solid var(--border);
      border-radius: 10px;
      padding: 1rem;
      margin-bottom: 0.75rem;
      transition: all 0.3s ease;
    }

    .subject-card:hover {
      background: linear-gradient(135deg, rgba(59, 130, 246, 0.05), rgba(45, 212, 191, 0.05));
      box-shadow: 0 6px 16px rgba(0, 0, 0, 0.08);
    }

    @media (max-width: 768px) {
      .table-container {
        display: none;
      }

      .subject-card {
        display: block;
      }

      th,
      td {
        font-size: 0.85rem;
        padding: 0.5rem;
      }
    }

    .subject-link {
      cursor: pointer;
      color: var(--primary-blue);
      font-weight: 500;
      transition: color 0.3s ease;
    }

    .subject-link:hover:not(.disabled) {
      color: var(--primary-indigo);
    }

    .subject-link.disabled {
      color: var(--text-muted);
      cursor: not-allowed;
      pointer-events: none;
    }

    #attendance-calendar,
    #subject-calendar {
      background: var(--card-bg);
      border-radius: 10px;
      padding: 1rem;
      min-height: 450px;
      border: 1px solid var(--border);
      box-shadow: var(--shadow);
    }

    .fc {
      font-size: 0.9rem;
    }

    .fc .fc-daygrid-day-number {
      color: var(--text-dark);
    }

    .fc .fc-daygrid-day.fc-day-today {
      background: rgba(59, 130, 246, 0.1);
    }

    .fc-event-present {
      background-color: #10b981;
      border-color: #10b981;
      color: var(--card-bg);
      border-radius: 4px;
      padding: 2px 4px;
      font-size: 0.85rem;
    }

    .fc-event-absent {
      background-color: #ef4444;
      border-color: #ef4444;
      color: var(--card-bg);
      border-radius: 4px;
      padding: 2px 4px;
      font-size: 0.85rem;
    }

    .fc .fc-button {
      background: var(--primary-blue);
      border: none;
      border-radius: 8px;
      padding: 0.5rem 1rem;
      font-size: 0.9rem;
      color: var(--card-bg);
      transition: all 0.3s ease;
    }

    .fc .fc-button:hover:not(:disabled) {
      background: var(--primary-indigo);
      transform: translateY(-1px);
    }

    .flowing-button {
      background: linear-gradient(135deg, var(--primary-blue), var(--primary-teal));
      border: none;
      border-radius: 8px;
      padding: 0.75rem 1.5rem;
      color: var(--card-bg);
      font-weight: 500;
      font-size: 0.95rem;
      cursor: pointer;
      transition: all 0.3s ease;
      min-width: 100px;
      text-align: center;
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    }

    .flowing-button:hover:not(:disabled) {
      background: linear-gradient(135deg, var(--primary-indigo), var(--primary-purple));
      transform: translateY(-2px);
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    }

    .flowing-button:disabled {
      opacity: 0.5;
      cursor: not-allowed;
      pointer-events: none;
    }

    @media (max-width: 768px) {
      .flowing-button {
        padding: 0.6rem 1rem;
        font-size: 0.85rem;
        min-width: 90px;
      }
    }

    .success-flow {
      background: linear-gradient(135deg, #10b981, #059669);
      color: var(--card-bg);
      padding: 0.75rem 1.5rem;
      border-radius: 10px;
      margin-bottom: 1rem;
      display: flex;
      align-items: center;
      justify-content: space-between;
      box-shadow: var(--shadow);
      animation: fadeInFlow 0.5s ease-out;
    }

    .error-flow {
      background: linear-gradient(135deg, #ef4444, #dc2626);
      color: var(--card-bg);
      padding: 0.75rem 1.5rem;
      border-radius: 10px;
      margin-bottom: 1rem;
      display: flex;
      align-items: center;
      justify-content: space-between;
      box-shadow: var(--shadow);
      animation: fadeInFlow 0.5s ease-out;
    }

    @media (max-width: 768px) {

      .success-flow,
      .error-flow {
        padding: 0.6rem 1rem;
        font-size: 0.85rem;
      }
    }
  </style>
</head>

<body>
  <button class="sidebar-toggle" aria-label="Toggle Sidebar">
    <i class="fas fa-bars"></i>
  </button>
  <%- include('../partials/sidebar', { token: token || '' , currentPage: 'attendance' }) %>

    <div class="morphing-container">
      <header class="organic-header fade-in-flow">
        <div class="px-4 py-3">
          <div class="flex items-center flex-wrap gap-3">
            <div class="icon-bubble mr-4">
              <i class="fas fa-calendar-check"></i>
            </div>
            <div>
              <h1 class="text-2xl font-semibold text-flow">Attendance</h1>
              <p class="text-flow text-muted text-sm">Track your presence</p>
            </div>
          </div>
        </div>
      </header>

      <main class="flowing-grid">
        <% if (typeof success !=='undefined' && success) { %>
          <div class="success-flow fade-in-flow" id="success-message">
            <div class="flex items-center">
              <i class="fas fa-check-circle text-lg mr-2"></i>
              <span class="font-medium text-sm">
                <%= success %>
              </span>
            </div>
            <button class="flowing-button" onclick="dismissMessage('success-message')"
              aria-label="Close success message">
              <i class="fas fa-times"></i> Close
            </button>
          </div>
          <% } %>
            <% if (typeof error !=='undefined' && error) { %>
              <div class="error-flow fade-in-flow" id="error-message">
                <div class="flex items-center">
                  <i class="fas fa-exclamation-circle text-lg mr-2"></i>
                  <span class="font-medium text-sm">
                    <%= error %>
                  </span>
                </div>
                <button class="flowing-button" onclick="dismissMessage('error-message')"
                  aria-label="Close error message">
                  <i class="fas fa-times"></i> Close
                </button>
              </div>
              <% } %>
                <section class="attendance-section">
                  <div class="blob-card attendance-blob slide-in-left">
                    <div class="p-4">
                      <div id="overall-attendance-container">
                        <h3 class="text-xl font-semibold text-flow mb-4">Overall Attendance Calendar</h3>
                        <div id="attendance-calendar"></div>
                      </div>
                      <h3 class="text-xl font-semibold text-flow mt-6 mb-4">Subject-wise Attendance</h3>
                      <div class="table-container">
                        <table>
                          <thead>
                            <tr>
                              <th aria-label="Subject">Subject</th>
                              <th aria-label="Present">Present</th>
                              <th aria-label="Absent">Absent</th>
                              <th aria-label="Total">Total</th>
                            </tr>
                          </thead>
                          <tbody>
                            <% if (!attendanceBySubject || attendanceBySubject.length===0) { %>
                              <tr>
                                <td colspan="4" class="text-center text-flow text-muted text-sm">
                                  No attendance records available
                                </td>
                              </tr>
                              <% } else { %>
                                <% attendanceBySubject.forEach(record=> { %>
                                  <tr>
                                    <td>
                                      <span
                                        class="subject-link <%= !record.subject || record.subject === 'N/A' ? 'disabled' : '' %>"
                                        data-subject="<%= record.subject || 'N/A' %>"
                                        aria-label="View attendance for <%= record.subject || 'unknown subject' %>">
                                        <%= record.subject || 'N/A' %>
                                      </span>
                                    </td>
                                    <td>
                                      <%= record.present || 0 %>
                                    </td>
                                    <td>
                                      <%= record.absent || 0 %>
                                    </td>
                                    <td>
                                      <%= record.total || 0 %>
                                    </td>
                                  </tr>
                                  <% }) %>
                                    <% } %>
                          </tbody>
                        </table>
                      </div>
                      <div class="subject-cards">
                        <% if (!attendanceBySubject || attendanceBySubject.length===0) { %>
                          <p class="text-flow text-center text-muted text-sm">
                            No attendance records available
                          </p>
                          <% } else { %>
                            <% attendanceBySubject.forEach(record=> { %>
                              <article class="subject-card">
                                <div class="flex flex-col gap-2">
                                  <p class="font-medium text-sm">
                                    <span
                                      class="subject-link <%= !record.subject || record.subject === 'N/A' ? 'disabled' : '' %>"
                                      data-subject="<%= record.subject || 'N/A' %>"
                                      aria-label="View attendance for <%= record.subject || 'unknown subject' %>">
                                      <%= record.subject || 'N/A' %>
                                    </span>
                                  </p>
                                  <p class="text-xs text-muted">
                                    Present: <%= record.present || 0 %>
                                  </p>
                                  <p class="text-xs text-muted">
                                    Absent: <%= record.absent || 0 %>
                                  </p>
                                  <p class="text-xs text-muted">
                                    Total: <%= record.total || 0 %>
                                  </p>
                                </div>
                              </article>
                              <% }) %>
                                <% } %>
                      </div>
                      <div id="subject-calendar-container" class="mt-6 hidden">
                        <div class="flex items-center justify-between mb-4">
                          <h3 class="text-xl font-semibold text-flow" id="subject-calendar-title"></h3>
                          <button id="back-to-overall" class="flowing-button" aria-label="Back to overall attendance">
                            <i class="fas fa-arrow-left mr-1"></i> Back
                          </button>
                        </div>
                        <div id="subject-calendar"></div>
                      </div>
                    </div>
                  </div>
                </section>
      </main>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.3/main.min.js"></script>
    <script>
      // Sidebar toggle
      const sidebar = document.querySelector(".sidebar");
      const toggle = document.querySelector(".sidebar-toggle");
      const closeBtn = document.querySelector(".sidebar-close");

      if (toggle) {
        toggle.addEventListener("click", () => {
          sidebar.classList.add("active");
        });
      }

      if (closeBtn) {
        closeBtn.addEventListener("click", () => {
          sidebar.classList.remove("active");
        });
      }

      // Auto-dismiss messages
      function dismissMessage(id) {
        const message = document.getElementById(id);
        if (message) {
          message.style.transition = "opacity 0.5s ease";
          message.style.opacity = "0";
          setTimeout(() => message.remove(), 500);
        }
      }

      if (document.getElementById("success-message")) {
        setTimeout(() => dismissMessage("success-message"), 5000);
      }
      if (document.getElementById("error-message")) {
        setTimeout(() => dismissMessage("error-message"), 5000);
      }

      // Attendance data
      let attendanceData = [];
      try {
        const rawData = `<%= user && user.attendance ? JSON.stringify(user.attendance).replace(/<\/script/g, '<\\/script') : '[]' %>`;
        if (rawData && rawData !== '[]') {
          attendanceData = JSON.parse(rawData);
        }
      } catch (err) {
        console.error("Error parsing attendance data:", err);
        const errorDiv = document.createElement("div");
        errorDiv.id = "error-message";
        errorDiv.className = "error-flow fade-in-flow";
        errorDiv.innerHTML = `
        <div class="flex items-center">
          <i class="fas fa-exclamation-circle text-lg mr-2"></i>
          <span class="font-medium text-sm">Error loading attendance data</span>
        </div>
        <button class="flowing-button" onclick="dismissMessage('error-message')" aria-label="Close error message">
          <i class="fas fa-times"></i> Close
        </button>
      `;
        document.querySelector(".flowing-grid").insertBefore(errorDiv, document.querySelector(".attendance-section"));
        setTimeout(() => dismissMessage("error-message"), 5000);
        attendanceData = [];
      }

      // Validate and format dates
      const validAttendanceData = attendanceData
        .filter((record) => {
          if (!record || !record.date || !record.subject || !record.status) {
            console.warn(`Invalid record: ${JSON.stringify(record)}`);
            return false;
          }
          const date = new Date(record.date);
          if (isNaN(date.getTime())) {
            console.warn(`Invalid date format for record: ${JSON.stringify(record)}`);
            return false;
          }
          return record.status === "Present" || record.status === "Absent";
        })
        .map((record) => ({
          ...record,
          date: new Date(record.date).toISOString().split("T")[0],
        }));

      // Overall calendar
      const calendarEl = document.getElementById("attendance-calendar");
      const overallContainer = document.getElementById("overall-attendance-container");
      let calendar = null;

      function renderOverallCalendar() {
        if (!calendarEl || !overallContainer) {
          console.error("Calendar element or container not found");
          if (overallContainer) {
            overallContainer.innerHTML =
              '<p class="text-flow text-center text-muted text-sm">Error: Calendar container not found</p>';
          }
          return;
        }

        if (calendar) {
          calendar.destroy();
        }

        try {
          calendar = new FullCalendar.Calendar(calendarEl, {
            initialView: "dayGridMonth",
            height: "auto",
            contentHeight: 400,
            fixedWeekCount: false,
            events: validAttendanceData.map((record) => ({
              title: `${record.subject}: ${record.status}`,
              start: record.date,
              classNames: record.status === "Present" ? ["fc-event-present"] : ["fc-event-absent"],
            })),
            eventDidMount: function (info) {
              info.el.setAttribute("title", info.event.title);
              info.el.setAttribute("aria-label", info.event.title);
            },
            eventsSet: function () {
              if (validAttendanceData.length === 0) {
                calendarEl.innerHTML =
                  '<p class="text-flow text-center text-muted text-sm">No attendance records available</p>';
              }
            },
            headerToolbar: {
              left: 'prev,next today',
              center: 'title',
              right: ''
            },
            datesSet: function () {
              calendarEl.querySelector('.fc-scroller').style.overflow = 'visible';
            }
          });
          calendar.render();
        } catch (err) {
          console.error("Error rendering calendar:", err);
          calendarEl.innerHTML =
            '<p class="text-flow text-center text-muted text-sm">Error rendering calendar</p>';
        }
      }

      // Subject-specific calendar
      const subjectLinks = document.querySelectorAll(".subject-link");
      const subjectCalendarContainer = document.getElementById("subject-calendar-container");
      const subjectCalendarTitle = document.getElementById("subject-calendar-title");
      let subjectCalendar = null;

      function showOverallCalendar() {
        if (subjectCalendarContainer && overallContainer) {
          subjectCalendarContainer.classList.add("hidden");
          overallContainer.classList.remove("hidden");
        }
        if (subjectCalendar) {
          subjectCalendar.destroy();
          subjectCalendar = null;
        }
        renderOverallCalendar();
      }

      subjectLinks.forEach((link) => {
        link.addEventListener("click", () => {
          const subject = link.dataset.subject;
          if (!subject || subject === "N/A") {
            console.warn(`Invalid subject clicked: ${subject}`);
            return;
          }
          if (subjectCalendarTitle && subjectCalendarContainer && overallContainer) {
            subjectCalendarTitle.textContent = `${subject} Attendance`;
            overallContainer.classList.add("hidden");
            subjectCalendarContainer.classList.remove("hidden");
          } else {
            console.error("Subject calendar elements not found");
            const errorDiv = document.createElement("div");
            errorDiv.id = "error-message";
            errorDiv.className = "error-flow fade-in-flow";
            errorDiv.innerHTML = `
            <div class="flex items-center">
              <i class="fas fa-exclamation-circle text-lg mr-2"></i>
              <span class="font-medium text-sm">Error loading subject calendar</span>
            </div>
            <button class="flowing-button" onclick="dismissMessage('error-message')" aria-label="Close error message">
              <i class="fas fa-times"></i> Close
            </button>
          `;
            document.querySelector(".flowing-grid").insertBefore(errorDiv, document.querySelector(".attendance-section"));
            setTimeout(() => dismissMessage("error-message"), 5000);
            return;
          }

          if (subjectCalendar) {
            subjectCalendar.destroy();
          }

          const subjectCalendarEl = document.getElementById("subject-calendar");
          if (!subjectCalendarEl) {
            console.error("Subject calendar element not found");
            subjectCalendarContainer.innerHTML =
              '<p class="text-flow text-center text-muted text-sm">Error: Calendar container not found</p>';
            return;
          }

          try {
            subjectCalendar = new FullCalendar.Calendar(subjectCalendarEl, {
              initialView: "dayGridMonth",
              height: "auto",
              contentHeight: 400,
              fixedWeekCount: false,
              events: validAttendanceData
                .filter((record) => record.subject === subject)
                .map((record) => ({
                  title: record.status,
                  start: record.date,
                  classNames: record.status === "Present" ? ["fc-event-present"] : ["fc-event-absent"],
                })),
              eventDidMount: function (info) {
                info.el.setAttribute("title", info.event.title);
                info.el.setAttribute("aria-label", info.event.title);
              },
              eventsSet: function () {
                if (validAttendanceData.filter((record) => record.subject === subject).length === 0) {
                  subjectCalendarEl.innerHTML =
                    '<p class="text-flow text-center text-muted text-sm">No attendance records for this subject</p>';
                }
              },
              headerToolbar: {
                left: 'prev,next today',
                center: 'title',
                right: ''
              },
              datesSet: function () {
                subjectCalendarEl.querySelector('.fc-scroller').style.overflow = 'visible';
              }
            });
            subjectCalendar.render();
          } catch (err) {
            console.error(`Error rendering subject calendar for ${subject}:`, err);
            subjectCalendarEl.innerHTML =
              '<p class="text-flow text-center text-muted text-sm">Error rendering calendar</p>';
            const errorDiv = document.createElement("div");
            errorDiv.id = "error-message";
            errorDiv.className = "error-flow fade-in-flow";
            errorDiv.innerHTML = `
            <div class="flex items-center">
              <i class="fas fa-exclamation-circle text-lg mr-2"></i>
              <span class="font-medium text-sm">Error rendering calendar for ${subject}</span>
            </div>
            <button class="flowing-button" onclick="dismissMessage('error-message')" aria-label="Close error message">
              <i class="fas fa-times"></i> Close
            </button>
          `;
            document.querySelector(".flowing-grid").insertBefore(errorDiv, document.querySelector(".attendance-section"));
            setTimeout(() => dismissMessage("error-message"), 5000);
          }
        });
      });

      // Attach back button event
      const backButton = document.getElementById("back-to-overall");
      if (backButton) {
        backButton.addEventListener("click", showOverallCalendar);
      }

      // Initial render
      if (calendarEl && overallContainer) {
        if (validAttendanceData.length > 0) {
          renderOverallCalendar();
        } else {
          calendarEl.innerHTML =
            '<p class="text-flow text-center text-muted text-sm">No attendance records available</p>';
        }
      } else {
        console.error("Calendar element or container not found on page load");
        if (overallContainer) {
          overallContainer.innerHTML =
            '<p class="text-flow text-center text-muted text-sm">Error: Calendar container not found</p>';
        }
      }

      // Ensure all buttons are clickable
      document.querySelectorAll('.flowing-button').forEach(button => {
        button.addEventListener('click', (e) => {
          const href = button.getAttribute('href');
          if (href && href !== '#' && !button.disabled) {
            window.location.href = href;
          }
        });
      });
    </script>
</body>

</html>